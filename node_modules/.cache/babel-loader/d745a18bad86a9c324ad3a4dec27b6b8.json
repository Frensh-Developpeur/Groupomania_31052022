{"ast":null,"code":"import \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.trim.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* Import de axios */\nimport axios from 'axios';\n/* Import de axios */\n\n/* Enregistre les données du session storage dans une variable et le convertie */\n\nvar sessionUser = JSON.parse(sessionStorage.getItem('user'));\n/* Enregistre les données du session storage dans une variable et le convertie */\n\nexport default {\n  name: 'espace-user',\n  data: function data() {\n    return {\n      /* Data */\n      user: '',\n      modifUser: false,\n      userId: sessionUser.userId,\n      tokenUser: sessionUser.token,\n      url: null,\n      alt_text: null,\n      modifImg: false,\n      boolAffichMsg: false,\n      regexpBoolName: null,\n      regexpBoolFirstName: null,\n      regexpBoolAdress: null,\n      regexpBoolCity: null,\n      regexpBoolPassword: null,\n\n      /* Permet d'afficher le button de confirmation */\n      buttonModifUser: false,\n      buttonValidModifUser: false,\n\n      /* Permet d'afficher le button de confirmation */\n\n      /* REGEXP MODIFICATION USER */\n      firstNameRegExp: new RegExp(\"^[a-zA-Z\\xE0\\xE2\\xE4\\xE9\\xE8\\xEA\\xEB\\xEF\\xEE\\xF4\\xF6\\xF9\\xFB\\xFC\\xE7\\xB0 -]{1,}$\"),\n      passwordRegExp: new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"),\n      lastNameRegExp: new RegExp(\"^[a-zA-Z\\xE0\\xE2\\xE4\\xE9\\xE8\\xEA\\xEB\\xEF\\xEE\\xF4\\xF6\\xF9\\xFB\\xFC\\xE7\\xB0 -]{1,}$\"),\n      regexAddress: new RegExp(/^[a-zA-Z0-9 ]+$/),\n      cityRegExp: new RegExp(\"^[a-zA-Z\\xE0\\xE2\\xE4\\xE9\\xE8\\xEA\\xEB\\xEF\\xEE\\xF4\\xF6\\xF9\\xFB\\xFC\\xE7\\xB0 -]{1,}$\")\n      /* REGEXP MODIFICATION USER */\n\n    };\n    /* Data */\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    /* Requete l'api de l'user et l'enregistre dans le data */\n    axios.get(\"http://localhost:3000/api/auth/\" + sessionUser.userId, {\n      headers: {\n        'Authorization': 'Bearer ' + sessionUser.token\n      }\n    }).then(function (response) {\n      return _this.user = response.data;\n    }).catch(function (error) {\n      error;\n      sessionStorage.clear();\n      location.reload();\n      window.location.assign(\"http://localhost:8080/\");\n    });\n    /* Requete l'api de l'user et l'enregistre dans le data */\n\n    /* Requete l'api des post personnel */\n\n    axios.get(\"http://localhost:3000/api/post/\" + sessionUser.userId, {}).then(function (response) {\n      var postdata = JSON.parse(response.data);\n      /* Boucle sur le nombre de post */\n\n      postdata.forEach(function (response) {\n        var deletePost = '';\n        /* Vérifie qu'il y a une image sur le Post */\n\n        if (!response.imageUrl) {\n          response.imageUrl = \"\";\n        }\n        /* Vérifie qu'il y a une image sur le Post */\n\n\n        var modifyText = '';\n        /* Vérifie l'userId et le grade de l'user */\n\n        if (response.userId == sessionUser.userId || response.grade == 'admin') {\n          modifyText = 'Modifier';\n          deletePost = 'Supprimer';\n        }\n        /* Vérifie l'userId et le grade de l'user */\n\n        /* Crée un bloc de code HTML si image */\n\n\n        if (response.imageUrl != \"\") {\n          var articleCreate = document.createElement('article');\n          articleCreate.className = 'cart__post';\n          articleCreate.id = 'article__' + response._id + '';\n          articleCreate.dataset.id = response._id;\n          articleCreate.innerHTML = \"\\n                <div class=\\\"cart__nav-div\\\">\\n                    <img class=\\\"imgUserGet\\\"  src=\\\"\".concat(response.imageUrlUser, \"\\\" alt=\\\"image de profil\\\">\\n                    <h2 class=\\\"namePostGet\\\">\").concat(response.NameUser, \" \").concat(response.FirstNameUser, \"</h2>\\n                    <button class=\\\"modifyPostGet\\\" >\").concat(modifyText, \"</button>\\n                    <button class=\\\"deletePost\\\" id=\\\"delete__\").concat(response._id, \"\\\" >\").concat(deletePost, \"</button>\\n\\n                </div>\\n\\n                <img class=\\\"imgPostGet\\\" src=\\\"\").concat(response.imageUrl, \"\\\" alt=\\\"image du post\\\">\\n\\n                <div class=\\\"cart__foot-div\\\">\\n                    <h4 class=\\\"titlePostGet\\\">\").concat(response.Title, \"</h4>\\n                    <p class=\\\"contentPostGet\\\">\").concat(response.Content, \"</p>\\n                </div>\");\n          document.getElementById('post').appendChild(articleCreate);\n          /* Gére la suppresion du post avec une requête*/\n\n          var deleteValide = '';\n\n          if (response.userId == _this.user._id || _this.user.Grade == 'admin') {\n            deleteValide = 'http://localhost:3000/api/post/';\n          } else {\n            deleteValide = 'error';\n          }\n\n          var deletePostLet = document.querySelector(\"#delete__\" + response._id + \"\");\n          deletePostLet.addEventListener(\"click\", function (e) {\n            var dataSetId = e.target.closest('.cart__post').dataset.id;\n\n            if (dataSetId == response._id) {\n              if (confirm('Voulez-vous supprimez le post ?')) {\n                axios.delete(\"\".concat(deleteValide) + response._id, {}).then(function () {\n                  return location.reload();\n                }).catch(function (error) {\n                  return error;\n                });\n              }\n            }\n          });\n        } else {\n          /* Génere un bloc de code HTML si il y a  pas d'image */\n          var _articleCreate = document.createElement('article');\n\n          _articleCreate.className = 'cart__post';\n          _articleCreate.id = 'article__' + response._id + '';\n          _articleCreate.dataset.id = response._id;\n          _articleCreate.innerHTML = \"\\n                <div class=\\\"cart__nav-div\\\">\\n                    <img class=\\\"imgUserGet\\\"  src=\\\"\".concat(response.imageUrlUser, \"\\\" alt=\\\"image de profil\\\">\\n                    <h2 class=\\\"namePostGet\\\">\").concat(response.NameUser, \" \").concat(response.FirstNameUser, \"</h2>\\n                    <button class=\\\"modifyPostGet\\\">\").concat(modifyText, \"</button>\\n                    <button class=\\\"deletePost\\\" id=\\\"delete__\").concat(response._id, \"\\\" >\").concat(deletePost, \"</button>\\n                </div>\\n                <div class=\\\"cart__foot-div\\\">\\n                    <h4 class=\\\"titlePostGet\\\">\").concat(response.Title, \"</h4>\\n                    <p class=\\\"contentPostGet\\\">\").concat(response.Content, \"</p>\\n                </div>\");\n          document.getElementById('post').appendChild(_articleCreate);\n          /* Gére la suppresion du post avec une requête*/\n\n          var _deleteValide = '';\n\n          if (response.userId == _this.user._id || _this.user.Grade == 'admin') {\n            _deleteValide = 'http://localhost:3000/api/post/';\n          } else {\n            _deleteValide = 'error';\n          }\n\n          var _deletePostLet = document.querySelector(\"#delete__\" + response._id + \"\");\n\n          _deletePostLet.addEventListener(\"click\", function (e) {\n            var dataSetId = e.target.closest('.cart__post').dataset.id;\n\n            if (dataSetId == response._id) {\n              if (confirm('Voulez-vous supprimez le post ?')) {\n                axios.delete(\"\".concat(_deleteValide) + response._id, {}).then(function () {\n                  return location.reload();\n                }).catch(function (error) {\n                  return error;\n                });\n              }\n            }\n          });\n        }\n      });\n    }).catch(function (error) {\n      error;\n    });\n  },\n  methods: {\n    /* Function permettant de modifier un post */\n    modifPost: function modifPost(e) {\n      /* Requête l'api pour récuperer les valeurs de l'user  */\n      axios.get(\"http://localhost:3000/api/post/\", {})\n      /* Réponse de l'api */\n      .then(function (response) {\n        var postdata = JSON.parse(response.data);\n        /* Vérifie que le button cliquer est bien le bon post */\n\n        if (e.target.className === 'modifyPostGet') {\n          /* Met un dataset sur l'article */\n          var dataSetId = e.target.closest('.cart__post').dataset.id;\n          /* Boucle sur le nombre de post */\n\n          postdata.forEach(function (post) {\n            /* Vérifie le postId et le dataSet de l'article */\n            if (post._id == dataSetId) {\n              /* Vérifie qu'une image est renvoyée */\n              if (post.imageUrl != \"\") {\n                axios.get(\"http://localhost:3000/api/auth/\" + post.userId, {\n                  headers: {\n                    'Authorization': 'Bearer ' + sessionUser.token\n                  }\n                }).then(function (postdataNew) {\n                  var userDataNew = postdataNew.data;\n\n                  if (post.imageUrl != null) {\n                    /* Si l'image est null crée un bloc HTML */\n                    document.querySelector('#article__' + post._id + '').innerHTML = \" <div class=\\\"cart__nav-div\\\">\\n                    <img class=\\\"imgUserGet\\\"  src=\\\"\".concat(userDataNew.imageUrl, \"\\\" alt=\\\"image de profil\\\">\\n                    <h2 class=\\\"namePostGet\\\">\").concat(userDataNew.Name, \" \").concat(userDataNew.FirstName, \"</h2>\\n                </div>\\n\\n                <img id=\\\"img__\").concat(post._id, \"\\\" class=\\\"imgPostGet\\\" src=\\\"\").concat(post.imageUrl, \"\\\" alt=\\\"image du post\\\">\\n\\n                <div class=\\\"cart__foot-div-modif\\\">\\n                    <input type=\\\"file\\\" id=\\\"button__\").concat(post._id, \"\\\" class=\\\"modifButtonPostTest\\\">Cliquer ici pour modifier l'image</input>\\n                    <button class=\\\"modifButtonPost\\\">Cliquer ici pour modifier l'image</button>\\n                    <h3  class=\\\"titlePostGetModif\\\">Titre du post</h3>\\n                    <input id=\\\"title__\").concat(post._id, \"\\\" type='text' class=\\\"inputTextModif\\\" value=\\\"\").concat(post.Title, \"\\\"></input>\\n                    <h4 class=\\\"titlePostGet\\\">Contenu du post</h4>\\n                    <textarea id=\\\"textarea__\").concat(post._id, \"\\\" class=\\\"inputTextAreaModif\\\">\").concat(post.Content, \"</textarea>\\n                </div>\\n\\n                 <div class=\\\"cart__com-div-modif\\\">\\n\\n                   <a id=\\\"post__\").concat(post._id, \"\\\" class=\\\"commPostGet\\\" href=\\\"#\\\">Confirmer</a>\\n                 </div>\");\n                  } else {\n                    /* Si l'image n'est pas nul crée un bloc HTML ajoutant l'image */\n                    document.querySelector('#article__' + post._id + '').innerHTML = \" <div class=\\\"cart__nav-div\\\">\\n                    <img class=\\\"imgUserGet\\\"  src=\\\"\".concat(userDataNew.imageUrl, \"\\\" alt=\\\"image de profil\\\">\\n                    <h2 class=\\\"namePostGet\\\">\").concat(userDataNew.Name, \" \").concat(userDataNew.FirstName, \"</h2>\\n                </div>\\n\\n                <div class=\\\"cart__foot-div-modif\\\">\\n                <input type=\\\"file\\\" id=\\\"button__\").concat(post._id, \"\\\" class=\\\"modifButtonPostTest\\\">Cliquer ici pour modifier l'image</input>\\n                    <button class=\\\"modifButtonPost\\\">Cliquer ici pour ajouter une image</button>\\n                    <h3 class=\\\"titlePostGet\\\">Titre du post</h3>\\n                    <input id=\\\"title__\").concat(post._id, \"\\\"  type='text' class=\\\"inputTextModif\\\" value=\\\"\").concat(post.Title, \"\\\"></input>\\n                    <h4 class=\\\"titlePostGet\\\">Contenu du post</h4>\\n                    <textarea id=\\\"textarea__\").concat(post._id, \"\\\" class=\\\"inputTextAreaModif\\\">\").concat(post.Content, \"</textarea>\\n                </div>\\n\\n                 <div class=\\\"cart__com-div-modif\\\">\\n\\n                   <a id=\\\"post__\").concat(post._id, \"\\\" class=\\\"commPostGet\\\" href=\\\"#\\\">Confirmer</a>\\n                 </div>\");\n                  }\n                  /* Vérifie l'id du post et le dataSet de l'article */\n\n\n                  if (post._id == dataSetId) {\n                    /* Ajoute un evement au button modifier une image */\n                    var imgInput = document.querySelector(\"#button__\" + post._id + \"\");\n                    imgInput.addEventListener(\"change\", function (e) {\n                      /* Si il y a une image, delete l'img et la remplace par la nouvelle */\n                      if (document.getElementById(\"img__\" + post._id + \"\")) {\n                        var file = e.target.files[0];\n                        this.url = URL.createObjectURL(file);\n                        document.getElementById(\"img__\" + post._id + \"\").src = \"\" + this.url + \"\";\n                      } else {\n                        /* Pas d'image, ajoute une  image */\n                        var _file = e.target.files[0];\n                        this.url = URL.createObjectURL(_file);\n                        var img = document.createElement('img');\n                        img.className = \"imgPostGet\";\n                        img.src = \"\" + this.url + \"\";\n                        var parent = document.querySelector('#article__' + post._id + '');\n                        var nodeBefore = document.querySelector('.cart__foot-div-modif');\n                        parent.insertBefore(img, nodeBefore);\n                      }\n                    });\n                    /* Ajoute un evenement au button de modification */\n\n                    var sendModif = document.querySelector(\"#post__\" + post._id + \"\");\n                    sendModif.addEventListener(\"click\", function () {\n                      if (document.querySelector(\"#title__\" + post._id + \"\").value === \"\" || document.querySelector(\"#textarea__\" + post._id + \"\").value === \"\") {\n                        alert('Erreur ! Les champs ne doivent pas être vide !');\n                        return false;\n                      }\n                      /* Enregistre les données text modifiées */\n\n\n                      var updatePost = {\n                        Title: document.querySelector(\"#title__\" + post._id + \"\").value,\n                        Content: document.querySelector(\"#textarea__\" + post._id + \"\").value\n                      };\n                      /* Si il y a une image, fait une requête et modifie l'image dans la BDD */\n\n                      if (document.getElementById(\"button__\" + post._id + \"\").files[0]) {\n                        var image = document.getElementById(\"button__\" + post._id + \"\").files[0]; // Création d'un formData obligatoire pour envoi de l'image\n\n                        var formData = new FormData();\n                        formData.append('image', image); // Envoi des données sur l'url du serveur (mettez la votre) en POST en envoyant le formData contenant notre image et notre texte\n\n                        axios.put('http://localhost:3000/api/post/postImg/' + post._id, formData, {\n                          headers: {\n                            'Authorization': 'Bearer ' + sessionUser.token\n                          }\n                        }).then(function (resp) {\n                          resp;\n                        }).catch(function (err) {\n                          err.response;\n                        });\n                      }\n                      /* Si il y a une image, fait une requête et modifie l'image dans la BDD */\n\n                      /* Envoie les données text à la BDD */\n\n\n                      fetch('http://localhost:3000/api/post/postText/' + post._id, {\n                        method: \"PUT\",\n                        headers: {\n                          'Accept': 'application/json',\n                          'Content-type': 'application/json',\n                          'Authorization': 'Bearer ' + sessionUser.token\n                        },\n                        body: JSON.stringify(updatePost)\n                      }).then(function (modify) {\n                        return modify;\n                      }).catch(function (error) {\n                        error;\n                      });\n                      location.reload();\n                      /* Envoie les données text à la BDD et recharge la page */\n                    });\n                  }\n                });\n              }\n            }\n          });\n        }\n      });\n    },\n    UserValid: function UserValid() {\n      var updateUser = {\n        Name: document.querySelector('#Nom-modifUser').value,\n        FirstName: document.querySelector('#FirstName-modifUser').value,\n        Password: document.querySelector('#Password-modifUser').value,\n        City: document.querySelector('#City-modifUser').value,\n        Adress: document.querySelector('#Adress-modifUser').value\n      };\n      fetch('http://localhost:3000/api/auth/' + this.userId, {\n        method: \"PUT\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json',\n          'Authorization': 'Bearer ' + sessionUser.token\n        },\n        body: JSON.stringify(updateUser)\n      }).then(function (modify) {\n        return modify;\n      }).catch(function (error) {\n        error;\n        return false;\n      });\n      this.buttonValidModifUser = true;\n      setTimeout(function () {\n        location.reload();\n      }, 2000);\n    },\n    onEnter: function onEnter() {\n      var nameSignup = document.getElementById('Nom-modifUser');\n      var firstNameSignup = document.getElementById('FirstName-modifUser');\n      var adressSignup = document.getElementById('Adress-modifUser');\n      var citySignup = document.getElementById('City-modifUser');\n      var passwordSignup = document.getElementById('Password-modifUser');\n      if (this.lastNameRegExp.test(nameSignup.value.trim()) ? this.regexpBoolName = true : this.regexpBoolName = false) ;\n      if (this.firstNameRegExp.test(firstNameSignup.value.trim()) ? this.regexpBoolFirstName = true : this.regexpBoolFirstName = false) ;\n      if (this.regexAddress.test(adressSignup.value.trim()) ? this.regexpBoolAdress = true : this.regexpBoolAdress = false) ;\n      if (this.cityRegExp.test(citySignup.value.trim()) ? this.regexpBoolCity = true : this.regexpBoolCity = false) ;\n      if (this.passwordRegExp.test(passwordSignup.value.trim()) ? this.regexpBoolPassword = true : this.regexpBoolPassword = false) ;\n      this.regexpBoolName = this.lastNameRegExp.test(nameSignup.value.trim()) ? true : false;\n\n      if (this.regexpBoolName === true && this.regexpBoolFirstName === true && this.regexpBoolAdress === true && this.regexpBoolCity === true && this.regexpBoolPassword === true) {\n        this.buttonModifUser = true;\n      }\n\n      if (this.regexpBoolName === false || this.regexpBoolFirstName === false || this.regexpBoolAdress === false || this.regexpBoolCity === false || this.regexpBoolPassword === false) {\n        this.buttonModifUser = false;\n      }\n    },\n    affichMsgConf: function affichMsgConf() {\n      if (this.numberAffichMsg === false) {\n        this.numberAffichMsg = true;\n        document.getElementById('Password-modifUser').setAttribute(\"type\", \"password\");\n      } else {\n        this.numberAffichMsg = false;\n        document.getElementById('Password-modifUser').setAttribute(\"type\", \"text\");\n      }\n    },\n    onFileChange: function onFileChange(e) {\n      this.modifImg = true;\n      var file = e.target.files[0];\n      this.url = URL.createObjectURL(file); // Récupération de l'image\n\n      var image = document.getElementById('Img-modifUser').files[0]; // Création d'un formData obligatoire pour envoi de l'image\n\n      var formData = new FormData();\n      formData.append('image', image);\n      formData.append('alt_text', this.alt_text); // Envoi des données sur l'url du serveur (mettez la votre) en POST en envoyant le formData contenant notre image et notre texte\n\n      axios.put('http://localhost:3000/api/auth/img/' + this.userId, formData, {\n        headers: {\n          'Authorization': 'Bearer ' + sessionUser.token\n        }\n      }).then(function (resp) {\n        if (confirm(\"Image modifié ! Voulez-vous retournée à l'accueil ?\")) {\n          location.reload();\n        }\n\n        resp;\n      }).catch(function (err) {\n        err.response;\n      });\n    },\n    updateUser: function updateUser() {\n      this.modifUser = true;\n    },\n    suppUser: function suppUser() {\n      var suppConfirm = confirm(\"Voulez-vous supprimez votre compte ?\");\n\n      if (suppConfirm === true) {\n        axios.delete(\"http://localhost:3000/api/auth/\" + this.userId, {\n          headers: {\n            'Authorization': 'Bearer ' + sessionUser.token\n          }\n        }).then(function (response) {\n          return response;\n        });\n        sessionStorage.clear();\n        location.reload();\n        window.location.assign(\"http://localhost:8080/\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","user","modifUser","userId","tokenUser","url","alt_text","modifImg","boolAffichMsg","regexpBoolName","regexpBoolFirstName","regexpBoolAdress","regexpBoolCity","regexpBoolPassword","buttonModifUser","buttonValidModifUser","firstNameRegExp","passwordRegExp","lastNameRegExp","regexAddress","cityRegExp","mounted","axios","headers","then","catch","error","sessionStorage","location","window","postdata","response","modifyText","deletePost","articleCreate","document","deleteValide","deletePostLet","methods","modifPost","e","userDataNew","post","imgInput","img","parent","sendModif","alert","Title","Content","formData","resp","err","fetch","method","body","UserValid","Name","FirstName","Password","City","Adress","setTimeout","onEnter","affichMsgConf","onFileChange","updateUser","suppUser","delete"],"sourceRoot":"src/components/forum","sources":["espaceUser.vue"],"sourcesContent":["<template>\n  <div id=\"table-column\">\n      <!-- Affiche la partie espaceUser avec toute ses information -->\n    <div v-show=\"modifUser === false\" class=\"mb-3 page2\">\n      <img\n        class=\"imgUser\"\n        v-if=\"user.imageUrl\"\n        :src=\"user.imageUrl\"\n        alt=\"image de profil\"\n      />\n      <img\n        class=\"imgUser\"\n        v-if=\"!user.imageUrl\"\n        src=\"../../assets/test4.jpeg\"\n        alt=\"image de profil\"\n      />\n      <h1 class=\"nameUser\">{{user.FirstName}} {{user.Name}}</h1>\n      <p class=\"paramsUser\">Adresse mail : {{user.Email}}</p>\n      <p class=\"paramsUser\">Date de naissance : {{user.Birthday}}</p>\n      <p class=\"paramsUser\">Ville : {{user.City}}</p>\n      <p class=\"paramsUser\">Adresse: {{user.Adress}}</p>\n\n      <!-- Button modifier user & supprimer l'user -->\n      <div v-show=\"modifUser === false\" class=\"buttonUser\">\n        <button @click=\"updateUser\" class=\"modifButtonUser\">Modifier</button>\n        <button @click=\"suppUser\" class=\"suppButtonUser\">\n          Supprimer mon compte\n        </button>\n      <!-- Button modifier user & supprimer l'user -->\n\n      </div>\n    </div>\n<!-- Affiche la partie espaceUser avec toute ses information-->\n  \n  <!-- Div gérant les posts personnels -->\n    <div\n      id=\"post\"\n      v-on:click=\"function(e){modifPost(e)}\"\n      v-show=\"modifUser === false\"\n      class=\"mb-5 page2\"\n    >\n      <h2 class=\"titlePost\">Fil d'actualité personnel</h2>\n    </div>\n  <!-- Div gérant les posts personnels -->\n\n  <!-- Affiche la partie modification de l'user -->\n    <div v-show=\"modifUser === true\" class=\"mb-3 page2\">\n      <img\n        class=\"imgUser\"\n        v-if=\"user.imageUrl && url === null\"\n        :src=\"user.imageUrl\"\n        alt=\"image de profil\"\n      />\n      <img class=\"imgUser\" v-if=\"url\" :src=\"url\" />\n      <img\n        class=\"imgUser\"\n        v-if=\"user.imageUrl === null && url === null\"\n        src=\"../../assets/test4.jpeg\"\n        alt=\"image de profil\"\n      />\n\n      <label id=\"fontTextImg\" class=\"form-label\" for=\"Img-modifUser\"\n        >Sélectionner une image de profil\n      </label>\n\n      <div class=\"icoDiv\">\n        <input\n          type=\"file\"\n          class=\"template-login-signup\"\n          encType=\"mutipart/form-data\"\n          accept=\".jpg, .png, .gif\"\n          id=\"Img-modifUser\"\n          @change=\"onFileChange\"\n        />\n        <p class=\"buttonUpdateImg\">Modifier l'image</p>\n      </div>\n\n      <label for=\"Name-modifUser\" id=\"fontText\" class=\"form-label\">Nom</label>\n\n      <div class=\"icoDiv\">\n        <input\n          type=\"text\"\n          v-on:keyup=\"onEnter\"\n          class=\"template-login-signup\"\n          id=\"Nom-modifUser\"\n          placeholder=\"Insérez votre nom\"\n        />\n\n        <font-awesome-icon\n          icon=\"fa-solid fa-triangle-exclamation\"\n          class=\"exclamationRegexp\"\n          v-show=\"regexpBoolName === false\"\n        />\n        <font-awesome-icon\n          icon=\"fa-solid fa-check\"\n          class=\"validCheckRegexp\"\n          v-show=\"regexpBoolName === true\"\n        />\n      </div>\n\n      <label for=\"FirstName-modifUser\" id=\"fontText\" class=\"form-label\"\n        >Prénom</label\n      >\n\n      <div class=\"icoDiv\">\n        <input\n          type=\"text\"\n          v-on:keyup=\"onEnter\"\n          class=\"template-login-signup\"\n          id=\"FirstName-modifUser\"\n          placeholder=\"Insérez votre prénom\"\n        />\n\n        <font-awesome-icon\n          icon=\"fa-solid fa-triangle-exclamation\"\n          class=\"exclamationRegexp\"\n          v-show=\"regexpBoolFirstName === false\"\n        />\n        <font-awesome-icon\n          icon=\"fa-solid fa-check\"\n          class=\"validCheckRegexp\"\n          v-show=\"regexpBoolFirstName === true\"\n        />\n      </div>\n\n      <label for=\"City-modifUser\" id=\"fontText\" class=\"form-label\">Ville</label>\n\n      <div class=\"icoDiv\">\n        <input\n          type=\"text\"\n          v-on:keyup=\"onEnter\"\n          class=\"template-login-signup\"\n          id=\"City-modifUser\"\n          placeholder=\"Strasbourg\"\n        />\n\n        <font-awesome-icon\n          icon=\"fa-solid fa-triangle-exclamation\"\n          class=\"exclamationRegexp\"\n          v-show=\"regexpBoolCity === false\"\n        />\n        <font-awesome-icon\n          icon=\"fa-solid fa-check\"\n          class=\"verifRegexp\"\n          v-show=\"regexpBoolCity === true\"\n        />\n      </div>\n\n      <label for=\"Adress-modifUser\" id=\"fontText\" class=\"form-label\"\n        >Adresse</label\n      >\n\n      <div class=\"icoDiv\">\n        <input\n          type=\"text\"\n          v-on:keyup=\"onEnter\"\n          class=\"template-login-signup\"\n          id=\"Adress-modifUser\"\n          placeholder=\"32 rue de paris\"\n        />\n\n        <font-awesome-icon\n          icon=\"fa-solid fa-triangle-exclamation\"\n          class=\"exclamationRegexp\"\n          v-show=\"regexpBoolAdress === false\"\n        />\n        <font-awesome-icon\n          icon=\"fa-solid fa-check\"\n          class=\"validCheckRegexp\"\n          v-show=\"regexpBoolAdress === true\"\n        />\n      </div>\n\n      <label for=\"Password-modifUser\" id=\"fontText\" class=\"form-label\"\n        >Mot de passe</label\n      >\n\n      <div class=\"icoDiv\">\n        <input\n          type=\"password\"\n          v-on:keyup=\"onEnter\"\n          class=\"template-login-signup\"\n          id=\"Password-modifUser\"\n          placeholder=\"Group&1mania\"\n        />\n        <font-awesome-icon\n          @click=\"affichMsgConf\"\n          icon=\"fa-solid fa-eye-low-vision\"\n          class=\"validCheckRegexp eyesPassword\"\n        />\n        <font-awesome-icon\n          icon=\"fa-solid fa-triangle-exclamation\"\n          class=\"exclamationRegexpLogin\"\n          v-show=\"regexpBoolPassword === false\"\n        />\n        <font-awesome-icon\n          icon=\"fa-solid fa-check\"\n          class=\"validRegexpLogin\"\n          v-show=\"regexpBoolPassword === true\"\n        />\n      </div>\n        <!-- Affiche la partie modification de l'user -->\n\n        <!-- Button de confirmation avec message -->\n\n      <div v-show=\"modifUser === true\" class=\"buttonUserUpdate\">\n        <button\n          @click=\"UserValid\"\n          v-show=\"buttonModifUser === true\"\n          class=\"updateButtonUser\"\n        >\n          Confirmer\n        </button>\n        <p class=\"validColor\" v-show=\"this.buttonValidModifUser === true\">\n          Modification réussie ! Redirection en cours..\n        </p>\n       <!-- Button de confirmation avec message -->\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n/* Import de axios */\nimport axios from 'axios';\n/* Import de axios */\n\n/* Enregistre les données du session storage dans une variable et le convertie */\nlet sessionUser = JSON.parse(sessionStorage.getItem('user'));\n/* Enregistre les données du session storage dans une variable et le convertie */\n\nexport default {\n   name: 'espace-user',\n\n   data(){\n       return{\n              /* Data */\n           user : '',\n           modifUser: false,\n           userId: sessionUser.userId,\n           tokenUser: sessionUser.token,\n           url: null,\n           alt_text: null,\n           modifImg: false,\n           boolAffichMsg: false,\n           regexpBoolName: null,\n           regexpBoolFirstName: null,\n           regexpBoolAdress: null,\n           regexpBoolCity: null,\n           regexpBoolPassword: null,\n\n           /* Permet d'afficher le button de confirmation */\n           buttonModifUser: false,\n           buttonValidModifUser: false,\n            /* Permet d'afficher le button de confirmation */\n\n        /* REGEXP MODIFICATION USER */\n        firstNameRegExp : new RegExp(`^[a-zA-Zàâäéèêëïîôöùûüç° -]{1,}$`),\n        passwordRegExp : new RegExp(`^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})`),\n        lastNameRegExp : new RegExp(`^[a-zA-Zàâäéèêëïîôöùûüç° -]{1,}$`),\n        regexAddress : new RegExp(/^[a-zA-Z0-9 ]+$/),\n        cityRegExp : new RegExp(`^[a-zA-Zàâäéèêëïîôöùûüç° -]{1,}$`),\n        /* REGEXP MODIFICATION USER */\n       }\n          /* Data */\n   },\n   mounted () {\n        /* Requete l'api de l'user et l'enregistre dans le data */\n        axios.get(`http://localhost:3000/api/auth/` + sessionUser.userId, {\n        headers: {\n            'Authorization': 'Bearer ' + sessionUser.token,\n        },\n    })\n    .then(response => (this.user = response.data))\n    .catch((error) => {\n        error\n        sessionStorage.clear();\n        location.reload();\n        window.location.assign(`http://localhost:8080/`)\n    })\n     /* Requete l'api de l'user et l'enregistre dans le data */\n\n /* Requete l'api des post personnel */\naxios.get(`http://localhost:3000/api/post/` + sessionUser.userId, {\n\n    })\n    .then(response => {\n        let postdata = JSON.parse(response.data);\n\n  /* Boucle sur le nombre de post */\n        postdata.forEach((response) => {\n\n            let deletePost = '';\n\n             /* Vérifie qu'il y a une image sur le Post */\n            if (!response.imageUrl) {\n                response.imageUrl = \"\"\n            }\n             /* Vérifie qu'il y a une image sur le Post */\n\n            let modifyText = '';\n\n             /* Vérifie l'userId et le grade de l'user */\n            if (response.userId == sessionUser.userId || response.grade == 'admin') {\n                modifyText = 'Modifier';\n                deletePost = 'Supprimer'\n            }\n             /* Vérifie l'userId et le grade de l'user */\n\n              /* Crée un bloc de code HTML si image */\n            if (response.imageUrl != \"\") {\n                let articleCreate = document.createElement('article');\n                articleCreate.className = 'cart__post';\n                articleCreate.id = 'article__' + response._id + '';\n                articleCreate.dataset.id = response._id;\n                articleCreate.innerHTML = `\n                <div class=\"cart__nav-div\">\n                    <img class=\"imgUserGet\"  src=\"${response.imageUrlUser}\" alt=\"image de profil\">\n                    <h2 class=\"namePostGet\">${response.NameUser} ${response.FirstNameUser}</h2>\n                    <button class=\"modifyPostGet\" >${modifyText}</button>\n                    <button class=\"deletePost\" id=\"delete__${response._id}\" >${deletePost}</button>\n\n                </div>\n\n                <img class=\"imgPostGet\" src=\"${response.imageUrl}\" alt=\"image du post\">\n\n                <div class=\"cart__foot-div\">\n                    <h4 class=\"titlePostGet\">${response.Title}</h4>\n                    <p class=\"contentPostGet\">${response.Content}</p>\n                </div>`\n                document.getElementById('post').appendChild(articleCreate);\n\n                /* Gére la suppresion du post avec une requête*/\n                let deleteValide = '';\n                if (response.userId == this.user._id || this.user.Grade == 'admin') {\n                    deleteValide = 'http://localhost:3000/api/post/';\n                } else {\n                    deleteValide = 'error';\n                }\n                let deletePostLet = document.querySelector(\"#delete__\" + response._id + \"\");\n                deletePostLet.addEventListener(\"click\", function(e) {\n                    let dataSetId = e.target.closest('.cart__post').dataset.id;\n                     if(dataSetId == response._id){\n                    if (confirm('Voulez-vous supprimez le post ?')) {\n                        axios.delete(`${deleteValide}` + response._id, {})\n                            .then(() => (location.reload()))\n                            .catch(error => error)\n                    }\n                     }\n                });\n            } else {\n\n                /* Génere un bloc de code HTML si il y a  pas d'image */\n                let articleCreate = document.createElement('article');\n                articleCreate.className = 'cart__post';\n                articleCreate.id = 'article__' + response._id + '';\n                articleCreate.dataset.id = response._id;\n                articleCreate.innerHTML = `\n                <div class=\"cart__nav-div\">\n                    <img class=\"imgUserGet\"  src=\"${response.imageUrlUser}\" alt=\"image de profil\">\n                    <h2 class=\"namePostGet\">${response.NameUser} ${response.FirstNameUser}</h2>\n                    <button class=\"modifyPostGet\">${modifyText}</button>\n                    <button class=\"deletePost\" id=\"delete__${response._id}\" >${deletePost}</button>\n                </div>\n                <div class=\"cart__foot-div\">\n                    <h4 class=\"titlePostGet\">${response.Title}</h4>\n                    <p class=\"contentPostGet\">${response.Content}</p>\n                </div>`\n                document.getElementById('post').appendChild(articleCreate);\n\n                /* Gére la suppresion du post avec une requête*/\n                let deleteValide = '';\n                if (response.userId == this.user._id || this.user.Grade == 'admin') {\n                    deleteValide = 'http://localhost:3000/api/post/';\n                } else {\n                    deleteValide = 'error';\n                }\n                let deletePostLet = document.querySelector(\"#delete__\" + response._id + \"\");\n                deletePostLet.addEventListener(\"click\", function(e) {\n                    let dataSetId = e.target.closest('.cart__post').dataset.id;\n                     if(dataSetId == response._id){\n                    if (confirm('Voulez-vous supprimez le post ?')) {\n                        axios.delete(`${deleteValide}` + response._id, {})\n                            .then(() => (location.reload()))\n                            .catch(error => error)\n                    }\n                  }\n                });\n            }\n\n        })\n\n    })\n    .catch((error) => {\n        error\n    })\n},\n   methods:{\n  /* Function permettant de modifier un post */\n        modifPost(e) {\n\n      /* Requête l'api pour récuperer les valeurs de l'user  */\n        axios.get(`http://localhost:3000/api/post/`, {})\n\n         /* Réponse de l'api */\n            .then(response => {\n                let postdata = JSON.parse(response.data);\n\n            /* Vérifie que le button cliquer est bien le bon post */\n                if (e.target.className === 'modifyPostGet') {\n\n                    /* Met un dataset sur l'article */\n                    let dataSetId = e.target.closest('.cart__post').dataset.id;\n\n                    /* Boucle sur le nombre de post */\n                    postdata.forEach((post) => {\n\n                     /* Vérifie le postId et le dataSet de l'article */\n                        if (post._id == dataSetId) {\n\n                              /* Vérifie qu'une image est renvoyée */\n                            if (post.imageUrl != \"\") {\n                                axios.get(`http://localhost:3000/api/auth/` + post.userId, {\n                                        headers: {\n                                            'Authorization': 'Bearer ' + sessionUser.token,\n                                        },\n                                    })\n                                    .then(postdataNew => {\n                                        let userDataNew = postdataNew.data;\n                                        if (post.imageUrl != null) {\n\n                                         /* Si l'image est null crée un bloc HTML */\n                                            document.querySelector('#article__' + post._id + '').innerHTML = ` <div class=\"cart__nav-div\">\n                    <img class=\"imgUserGet\"  src=\"${userDataNew.imageUrl}\" alt=\"image de profil\">\n                    <h2 class=\"namePostGet\">${userDataNew.Name} ${userDataNew.FirstName}</h2>\n                </div>\n\n                <img id=\"img__${post._id}\" class=\"imgPostGet\" src=\"${post.imageUrl}\" alt=\"image du post\">\n\n                <div class=\"cart__foot-div-modif\">\n                    <input type=\"file\" id=\"button__${post._id}\" class=\"modifButtonPostTest\">Cliquer ici pour modifier l'image</input>\n                    <button class=\"modifButtonPost\">Cliquer ici pour modifier l'image</button>\n                    <h3  class=\"titlePostGetModif\">Titre du post</h3>\n                    <input id=\"title__${post._id}\" type='text' class=\"inputTextModif\" value=\"${post.Title}\"></input>\n                    <h4 class=\"titlePostGet\">Contenu du post</h4>\n                    <textarea id=\"textarea__${post._id}\" class=\"inputTextAreaModif\">${post.Content}</textarea>\n                </div>\n\n                 <div class=\"cart__com-div-modif\">\n\n                   <a id=\"post__${post._id}\" class=\"commPostGet\" href=\"#\">Confirmer</a>\n                 </div>`\n\n                                        } else {\n\n                                             /* Si l'image n'est pas nul crée un bloc HTML ajoutant l'image */\n\n                                            document.querySelector('#article__' + post._id + '').innerHTML = ` <div class=\"cart__nav-div\">\n                    <img class=\"imgUserGet\"  src=\"${userDataNew.imageUrl}\" alt=\"image de profil\">\n                    <h2 class=\"namePostGet\">${userDataNew.Name} ${userDataNew.FirstName}</h2>\n                </div>\n\n                <div class=\"cart__foot-div-modif\">\n                <input type=\"file\" id=\"button__${post._id}\" class=\"modifButtonPostTest\">Cliquer ici pour modifier l'image</input>\n                    <button class=\"modifButtonPost\">Cliquer ici pour ajouter une image</button>\n                    <h3 class=\"titlePostGet\">Titre du post</h3>\n                    <input id=\"title__${post._id}\"  type='text' class=\"inputTextModif\" value=\"${post.Title}\"></input>\n                    <h4 class=\"titlePostGet\">Contenu du post</h4>\n                    <textarea id=\"textarea__${post._id}\" class=\"inputTextAreaModif\">${post.Content}</textarea>\n                </div>\n\n                 <div class=\"cart__com-div-modif\">\n\n                   <a id=\"post__${post._id}\" class=\"commPostGet\" href=\"#\">Confirmer</a>\n                 </div>`\n\n                                        }\n                                         /* Vérifie l'id du post et le dataSet de l'article */\n                                        if (post._id == dataSetId) {\n                      \n                                           /* Ajoute un evement au button modifier une image */\n                                            var imgInput = document.querySelector(\"#button__\" + post._id + \"\");\n                                            imgInput.addEventListener(\"change\", function(e) {\n\n                                                 /* Si il y a une image, delete l'img et la remplace par la nouvelle */\n                                                if (document.getElementById(\"img__\" + post._id + \"\")) {\n                                                    const file = e.target.files[0];\n                                                    this.url = URL.createObjectURL(file);\n                                                    document.getElementById(\"img__\" + post._id + \"\").src = \"\" + this.url + \"\";\n                                                } else {\n\n                                                    /* Pas d'image, ajoute une  image */\n                                                    const file = e.target.files[0];\n                                                    this.url = URL.createObjectURL(file);\n                                                    let img = document.createElement('img');\n                                                    img.className = \"imgPostGet\";\n                                                    img.src = \"\" + this.url + \"\";\n                                                    let parent = document.querySelector('#article__' + post._id + '');\n                                                    let nodeBefore = document.querySelector('.cart__foot-div-modif');\n                                                    parent.insertBefore(img, nodeBefore);\n\n                                                }\n\n                                            });\n                                            /* Ajoute un evenement au button de modification */\n                                            var sendModif = document.querySelector(\"#post__\" + post._id + \"\");\n                                            sendModif.addEventListener(\"click\", function() {\n                                                if (document.querySelector(\"#title__\" + post._id + \"\").value === \"\" || document.querySelector(\"#textarea__\" + post._id + \"\").value === \"\") {\n                                                    alert('Erreur ! Les champs ne doivent pas être vide !')\n                                                    return false;\n                                                }\n                                                  /* Enregistre les données text modifiées */\n                                                let updatePost = {\n                                                    Title: document.querySelector(\"#title__\" + post._id + \"\").value,\n                                                    Content: document.querySelector(\"#textarea__\" + post._id + \"\").value,\n                                                }\n\n                                                 /* Si il y a une image, fait une requête et modifie l'image dans la BDD */\n                                                if (document.getElementById(\"button__\" + post._id + \"\").files[0]) {\n                                                    let image = document.getElementById(\"button__\" + post._id + \"\").files[0]\n                                                    // Création d'un formData obligatoire pour envoi de l'image\n                                                    let formData = new FormData()\n                                                    formData.append('image', image)\n\n                                                    // Envoi des données sur l'url du serveur (mettez la votre) en POST en envoyant le formData contenant notre image et notre texte\n                                                    axios.put('http://localhost:3000/api/post/postImg/' + post._id, formData, {\n                                                            headers: {\n                                                                'Authorization': 'Bearer ' + sessionUser.token\n                                                            }\n                                                        })\n                                                        .then((resp) => {\n                                                            resp\n                                                        })\n                                                        .catch((err) => {\n                                                            err.response\n                                                        })\n                                                }\n                                                 /* Si il y a une image, fait une requête et modifie l'image dans la BDD */\n\n                                                /* Envoie les données text à la BDD */\n                                                fetch('http://localhost:3000/api/post/postText/' + post._id, {\n                                                        method: \"PUT\",\n                                                        headers: {\n                                                            'Accept': 'application/json',\n                                                            'Content-type': 'application/json',\n                                                            'Authorization': 'Bearer ' + sessionUser.token,\n                                                        },\n                                                        body: JSON.stringify(updatePost),\n                                                    })\n                                                    .then(modify => modify)\n                                                    .catch((error) => {\n                                                        error\n                                                    })\n\n                                                location.reload();\n                                                /* Envoie les données text à la BDD et recharge la page */\n                                            });\n                                        }\n                                    })\n\n                            }\n                        }\n\n                    })\n                }\n            })\n    },\n    UserValid() {\n        let updateUser = {\n            Name: document.querySelector('#Nom-modifUser').value,\n            FirstName: document.querySelector('#FirstName-modifUser').value,\n            Password: document.querySelector('#Password-modifUser').value,\n            City: document.querySelector('#City-modifUser').value,\n            Adress: document.querySelector('#Adress-modifUser').value,\n        };\n\n\n        fetch('http://localhost:3000/api/auth/' + this.userId, {\n                method: \"PUT\",\n                headers: {\n                    'Accept': 'application/json',\n\n                    'Content-type': 'application/json',\n                    'Authorization': 'Bearer ' + sessionUser.token,\n                },\n                body: JSON.stringify(updateUser),\n            })\n            .then(modify => modify)\n            .catch((error) => {\n                error\n                return false;\n            })\n        this.buttonValidModifUser = true;\n        setTimeout(() => {\n            location.reload();\n        }, 2000)\n\n\n    },\n    onEnter() {\n        let nameSignup = document.getElementById('Nom-modifUser');\n        let firstNameSignup = document.getElementById('FirstName-modifUser');\n        let adressSignup = document.getElementById('Adress-modifUser');\n        let citySignup = document.getElementById('City-modifUser');\n        let passwordSignup = document.getElementById('Password-modifUser');\n\n        if (this.lastNameRegExp.test(nameSignup.value.trim()) ? this.regexpBoolName = true : this.regexpBoolName = false);\n        if (this.firstNameRegExp.test(firstNameSignup.value.trim()) ? this.regexpBoolFirstName = true : this.regexpBoolFirstName = false);\n        if (this.regexAddress.test(adressSignup.value.trim()) ? this.regexpBoolAdress = true : this.regexpBoolAdress = false);\n        if (this.cityRegExp.test(citySignup.value.trim()) ? this.regexpBoolCity = true : this.regexpBoolCity = false);\n        if (this.passwordRegExp.test(passwordSignup.value.trim()) ? this.regexpBoolPassword = true : this.regexpBoolPassword = false);\n        this.regexpBoolName = (this.lastNameRegExp.test(nameSignup.value.trim()) ? true : false);\n\n        if (this.regexpBoolName === true && this.regexpBoolFirstName === true &&\n            this.regexpBoolAdress === true && this.regexpBoolCity === true &&\n            this.regexpBoolPassword === true) {\n            this.buttonModifUser = true;\n        }\n        if (this.regexpBoolName === false || this.regexpBoolFirstName === false ||\n            this.regexpBoolAdress === false || this.regexpBoolCity === false ||\n            this.regexpBoolPassword === false) {\n            this.buttonModifUser = false;\n        }\n    },\n\n    affichMsgConf() {\n        if (this.numberAffichMsg === false) {\n            this.numberAffichMsg = true;\n            document.getElementById('Password-modifUser').setAttribute(\"type\", \"password\");\n        } else {\n            this.numberAffichMsg = false;\n            document.getElementById('Password-modifUser').setAttribute(\"type\", \"text\");\n        }\n    },\n    onFileChange(e) {\n        this.modifImg = true;\n        const file = e.target.files[0];\n        this.url = URL.createObjectURL(file);\n        // Récupération de l'image\n        let image = document.getElementById('Img-modifUser').files[0]\n        // Création d'un formData obligatoire pour envoi de l'image\n        let formData = new FormData()\n        formData.append('image', image)\n        formData.append('alt_text', this.alt_text)\n        // Envoi des données sur l'url du serveur (mettez la votre) en POST en envoyant le formData contenant notre image et notre texte\n        axios.put('http://localhost:3000/api/auth/img/' + this.userId, formData, {\n                headers: {\n                    'Authorization': 'Bearer ' + sessionUser.token\n                }\n            })\n            .then((resp) => {\n                if (confirm(\"Image modifié ! Voulez-vous retournée à l'accueil ?\")) {\n                    location.reload();\n\n                }\n                resp\n            })\n            .catch((err) => {\n                err.response\n            })\n    },\n\n    updateUser() {\n        this.modifUser = true;\n    },\n\n    suppUser() {\n        let suppConfirm = confirm(\"Voulez-vous supprimez votre compte ?\")\n        if (suppConfirm === true) {\n            axios\n                .delete(`http://localhost:3000/api/auth/` + this.userId, {\n                    headers: {\n                        'Authorization': 'Bearer ' + sessionUser.token,\n                    },\n                })\n                .then(response => response)\n            sessionStorage.clear();\n            location.reload();\n            window.location.assign(`http://localhost:8080/`)\n        }\n    }\n}\n\n}\n</script>\n\n<style>\n.titlePost{font-size:2rem;margin-bottom:5%}#table-column{flex-direction:column}.mb-3{padding-top:0}.test8{width:25px;height:26px;color:green;position:absolute;top:38%;right:25%}.test9{cursor:grab}.test7{width:30px;height:26px;color:red;position:absolute;top:38%;right:25%}.test11{width:30px;height:26px;color:red;position:absolute;top:38%;right:29%}.test10{width:25px;height:26px;color:green;position:absolute;top:38%;right:29%}.buttonUpdateImg{color:#fff;border-radius:15px;background:green;position:absolute;width:49%;height:100%;font-family:Raleway,sans-serif;font-size:1.5rem;display:flex;align-content:center;align-items:center;justify-content:center}#Img-modifUser{z-index:1;opacity:0;padding-top:15px;margin-top:5px;cursor:grab}#fontTextImg{margin-top:3%;font-family:Raleway,sans-serif;font-size:1.2rem;margin-bottom:10px;margin-top:20px;object-fit:cover}.page2{font-family:Raleway,sans-serif}.imgUser{height:400px;width:100%;border-radius:0;border-top-left-radius:15px;border-top-right-radius:15px;image-rendering:auto;object-fit:cover}.imgUserUpdate{height:200px;width:100%;border-radius:0;border-top-left-radius:15px;border-top-right-radius:15px;image-rendering:auto}.nameUser{text-transform:uppercase;font-size:2rem;margin-bottom:4%;margin-top:5%}.paramsUser{font-size:1.1rem;margin-bottom:3%}.buttonUser{display:flex;flex-direction:column;flex-wrap:wrap}.modifButtonUser{padding:10%;color:#fff;background:green;border:0;cursor:grab;border-radius:15px;font-size:1rem;margin-bottom:5%;font-family:Raleway,sans-serif}.buttonUserUpdate{width:100%;display:flex;flex-direction:column;align-items:center}.updateButtonUser{color:#fff;background:green;border:0;cursor:grab;border-radius:15px;font-size:1.2rem;margin-bottom:5%;font-family:Raleway,sans-serif;margin-top:20px;padding-left:20%;padding-right:20%;padding-top:1.5%;padding-bottom:1.5%}.suppButtonUser{padding:5%;color:#fff;background:red;border:0;cursor:grab;border-radius:15px;font-size:1rem;font-family:Raleway,sans-serif}@media screen and (max-width:900px){.imgUserGet{width:10%!important}.deletePost,.modifyPostGet{font-size:1.2rem!important}.paramsUser{font-size:.9rem}.borderCreate{width:80%!important}}@media screen and (max-width:768px){.cart__post{width:90%!important}}@media screen and (max-width:600px){.mb-5{width:100%!important;border-radius:0!important}.deletePost,.modifyPostGet{font-size:.8rem!important}}@media screen and (max-width:425px){.titlePostGet{font-size:1.6rem!important}.contentPostGet{font-size:1rem!important}.borderCreate{width:95%!important}.titlePost{font-size:1.6rem!important}}@media screen and (max-width:375px){.mb-5{margin-top:0!important}.imgUser{height:250px}.buttonUpdateImg{font-size:1rem}}@media screen and (max-width:350px){.namePostGet{font-size:1.1rem!important}.imgUserGet{width:12%!important}}\n</style>\n"]},"metadata":{},"sourceType":"module"}