{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nvar sessionUser = JSON.parse(sessionStorage.getItem('user'));\nexport default {\n  data: function data() {\n    return {\n      user: '',\n      url: null,\n      alt_text: 'test',\n      post_id: '',\n      modifPostData: false,\n      validPost: null\n    };\n  },\n  methods: {\n    modifPost: function modifPost(e) {\n      var _this = this;\n\n      axios.get(\"http://localhost:3000/api/post/\", {}).then(function (response) {\n        var postdata = JSON.parse(response.data);\n\n        if (e.target.className === 'modifyPostGet') {\n          var dataSetId = e.target.closest('.cart__post').dataset.id;\n          postdata.forEach(function (post) {\n            if (post._id == dataSetId) {\n              if (post.imageUrl != \"\") {\n                var userGrade = '';\n\n                if (_this.user.Grade == 'admin') {\n                  userGrade = \"http://localhost:3000/api/auth/admin/\";\n                } else {\n                  userGrade = \"http://localhost:3000/api/auth/\";\n                }\n\n                axios.get(\"\".concat(userGrade) + post.userId, {\n                  headers: {\n                    'Authorization': 'Bearer ' + sessionUser.token\n                  }\n                }).then(function (postdataNew) {\n                  var userDataNew = postdataNew.data;\n\n                  if (post.imageUrl != null) {\n                    document.querySelector('#article__' + post._id + '').innerHTML = \" <div class=\\\"cart__nav-div\\\">\\n                    <img class=\\\"imgUserGet\\\"  src=\\\"\".concat(userDataNew.imageUrl, \"\\\" alt=\\\"image de profil\\\">\\n                    <h2 class=\\\"namePostGet\\\">\").concat(userDataNew.Name, \" \").concat(userDataNew.FirstName, \"</h2>\\n                </div>\\n\\n                <img id=\\\"img__\").concat(post._id, \"\\\" class=\\\"imgPostGet\\\" src=\\\"\").concat(post.imageUrl, \"\\\" alt=\\\"image du post\\\">\\n\\n                <div class=\\\"cart__foot-div-modif\\\">\\n                    <input type=\\\"file\\\" accept=\\\".jpg, .png, .gif\\\" id=\\\"button__\").concat(post._id, \"\\\" class=\\\"modifButtonPostTest\\\">Cliquer ici pour modifier l'image</input>\\n                    <button class=\\\"modifButtonPost\\\">Cliquer ici pour modifier l'image</button>\\n                    <h3  class=\\\"titlePostGetModif\\\">Titre du post</h3>\\n                    <input id=\\\"title__\").concat(post._id, \"\\\" type='text' class=\\\"inputTextModif\\\" value=\\\"\").concat(post.Title, \"\\\"></input>\\n                    <h4 class=\\\"titlePostGet\\\">Contenu du post</h4>\\n                    <textarea id=\\\"textarea__\").concat(post._id, \"\\\" class=\\\"inputTextAreaModif\\\">\").concat(post.Content, \"</textarea>\\n                </div>\\n\\n                 <div class=\\\"cart__com-div-modif\\\">\\n\\n                   <a id=\\\"post__\").concat(post._id, \"\\\" class=\\\"commPostGet\\\" href=\\\"#\\\">Confirmer</a>\\n                 </div>\");\n                  } else {\n                    document.querySelector('#article__' + post._id + '').innerHTML = \" <div class=\\\"cart__nav-div\\\">\\n                    <img class=\\\"imgUserGet\\\"  src=\\\"\".concat(userDataNew.imageUrl, \"\\\" alt=\\\"image de profil\\\">\\n                    <h2 class=\\\"namePostGet\\\">\").concat(userDataNew.Name, \" \").concat(userDataNew.FirstName, \"</h2>\\n                </div>\\n\\n                <div class=\\\"cart__foot-div-modif\\\">\\n                <input type=\\\"file\\\" accept=\\\".jpg, .png, .gif\\\" id=\\\"button__\").concat(post._id, \"\\\" class=\\\"modifButtonPostTest\\\">Cliquer ici pour modifier l'image</input>\\n                    <button class=\\\"modifButtonPost\\\">Cliquer ici pour ajouter une image</button>\\n                    <h3 class=\\\"titlePostGet\\\">Titre du post</h3>\\n                    <input id=\\\"title__\").concat(post._id, \"\\\"  type='text' class=\\\"inputTextModif\\\" value=\\\"\").concat(post.Title, \"\\\"></input>\\n                    <h4 class=\\\"titlePostGet\\\">Contenu du post</h4>\\n                    <textarea id=\\\"textarea__\").concat(post._id, \"\\\" class=\\\"inputTextAreaModif\\\">\").concat(post.Content, \"</textarea>\\n                </div>\\n\\n                 <div class=\\\"cart__com-div-modif\\\">\\n\\n                   <a id=\\\"post__\").concat(post._id, \"\\\" class=\\\"commPostGet\\\" href=\\\"#\\\">Confirmer</a>\\n                 </div>\");\n                  }\n\n                  if (post._id == dataSetId) {\n                    var imgInput = document.querySelector(\"#button__\" + post._id + \"\");\n                    imgInput.addEventListener(\"change\", function (e) {\n                      if (document.getElementById(\"img__\" + post._id + \"\")) {\n                        var file = e.target.files[0];\n                        this.url = URL.createObjectURL(file);\n                        document.getElementById(\"img__\" + post._id + \"\").src = \"\" + this.url + \"\";\n                      } else {\n                        var _file = e.target.files[0];\n                        this.url = URL.createObjectURL(_file);\n                        var img = document.createElement('img');\n                        img.className = \"imgPostGet\";\n                        img.src = \"\" + this.url + \"\";\n                        var parent = document.querySelector('#article__' + post._id + '');\n                        var nodeBefore = document.querySelector('.cart__foot-div-modif');\n                        parent.insertBefore(img, nodeBefore);\n                      }\n                    });\n                    var sendModif = document.querySelector(\"#post__\" + post._id + \"\");\n                    sendModif.addEventListener(\"click\", function () {\n                      if (document.querySelector(\"#title__\" + post._id + \"\").value === \"\" || document.querySelector(\"#textarea__\" + post._id + \"\").value === \"\") {\n                        alert('Erreur ! Les champs ne doivent pas être vide !');\n                        return false;\n                      }\n\n                      var updatePost = {\n                        Title: document.querySelector(\"#title__\" + post._id + \"\").value,\n                        Content: document.querySelector(\"#textarea__\" + post._id + \"\").value\n                      };\n\n                      if (document.getElementById(\"button__\" + post._id + \"\").files[0]) {\n                        var image = document.getElementById(\"button__\" + post._id + \"\").files[0]; // Création d'un formData obligatoire pour envoi de l'image\n\n                        var formData = new FormData();\n                        formData.append('image', image); // Envoi des données sur l'url du serveur (mettez la votre) en POST en envoyant le formData contenant notre image et notre texte\n\n                        axios.put('http://localhost:3000/api/post/postImg/' + post._id, formData, {\n                          headers: {\n                            'Authorization': 'Bearer ' + sessionUser.token\n                          }\n                        }).then(function (resp) {\n                          resp;\n                        }).catch(function (err) {\n                          err.response;\n                        });\n                      }\n\n                      fetch('http://localhost:3000/api/post/postText/' + post._id, {\n                        method: \"PUT\",\n                        headers: {\n                          'Accept': 'application/json',\n                          'Content-type': 'application/json',\n                          'Authorization': 'Bearer ' + sessionUser.token\n                        },\n                        body: JSON.stringify(updatePost)\n                      }).then(function (modify) {\n                        return modify;\n                      }).catch(function (error) {\n                        error;\n                      });\n                      location.reload();\n                    });\n                  }\n                });\n              }\n            }\n          });\n        }\n      });\n    },\n    onFileChangePost: function onFileChangePost(e) {\n      this.modifImg = true;\n      var file = e.target.files[0];\n      this.url = URL.createObjectURL(file);\n    },\n    PostValid: function PostValid() {\n      var _this2 = this;\n\n      var d = new Date();\n      var date = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate();\n      var hours = d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\n\n      if (document.querySelector('#inputTitle').value === '' || document.querySelector('#inputText').value === '') {\n        this.validPost = false;\n        setTimeout(function () {\n          _this2.validPost = null;\n        }, 2000);\n        return false;\n      }\n\n      var updatePost = {\n        Title: document.querySelector('#inputTitle').value,\n        Content: document.querySelector('#inputText').value,\n        userId: sessionUser.userId,\n        date: date,\n        hours: hours,\n        imageUrlUser: this.user.imageUrl,\n        NameUser: this.user.Name,\n        FirstNameUser: this.user.FirstName\n      };\n      var image = document.getElementById('imgPostUserInput').files[0];\n      var formData = new FormData();\n      formData.append('image', image);\n      axios.post(\"http://localhost:3000/api/post/\", formData, {\n        headers: {\n          'Authorization': 'Bearer ' + sessionUser.token\n        }\n      }).then(function (test) {\n        var test2 = JSON.parse(test.data);\n        fetch(\"http://localhost:3000/api/post/\" + test2, {\n          method: \"PUT\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer ' + sessionUser.token\n          },\n          body: JSON.stringify(updatePost)\n        }).then(function () {}).catch(function (error) {\n          error;\n        });\n      }).catch(function (error) {\n        error;\n      });\n      this.validPost = true;\n      setTimeout(function () {\n        _this2.validPost = null;\n        location.reload();\n      }, 3000);\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    axios.get(\"http://localhost:3000/api/auth/\" + sessionUser.userId, {\n      headers: {\n        'Authorization': 'Bearer ' + sessionUser.token\n      }\n    }).then(function (response) {\n      return _this3.user = response.data;\n    }).catch(function (error) {\n      error;\n      sessionStorage.clear();\n      location.reload();\n      window.location.assign(\"http://localhost:8080/\");\n    });\n    axios.get(\"http://localhost:3000/api/post/\", {}).then(function (response) {\n      var postdata = JSON.parse(response.data);\n      postdata.forEach(function (response) {\n        if (!response.imageUrl) {\n          response.imageUrl = \"\";\n        }\n\n        var modifyText = '';\n        var deletePost = '';\n\n        if (response.userId == sessionUser.userId || _this3.user.Grade == 'admin') {\n          modifyText = 'Modifier';\n          deletePost = 'Supprimer';\n        }\n\n        if (response.imageUrl != \"\") {\n          var imageUser = '';\n\n          if (response.imageUrlUser != null) {\n            imageUser = response.imageUrlUser;\n          } else {\n            imageUser = '../../assets/test4.jpeg';\n          }\n\n          var articleCreate = document.createElement('article');\n          articleCreate.className = 'cart__post';\n          articleCreate.id = 'article__' + response._id + '';\n          articleCreate.dataset.id = response._id;\n          articleCreate.innerHTML = \"\\n\\n                <div class=\\\"cart__nav-div\\\">\\n                    <img class=\\\"imgUserGet\\\"  src=\\\"\".concat(imageUser, \"\\\" alt=\\\"image de profil\\\">\\n                    <h2 class=\\\"namePostGet\\\">\").concat(response.NameUser, \" \").concat(response.FirstNameUser, \"</h2>\\n                    <button class=\\\"modifyPostGet\\\" href=\\\"#\\\">\").concat(modifyText, \"</button>\\n                    <button class=\\\"deletePost\\\" id=\\\"delete__\").concat(response._id, \"\\\" >\").concat(deletePost, \"</button>\\n                </div>\\n\\n                <img class=\\\"imgPostGet\\\" src=\\\"\").concat(response.imageUrl, \"\\\" alt=\\\"image du post\\\">\\n\\n                <div class=\\\"cart__foot-div\\\">\\n                    <h4  class=\\\"titlePostGet\\\">\").concat(response.Title, \"</h4>\\n                    <p class=\\\"contentPostGet\\\">\").concat(response.Content, \"</p>\\n                </div>\");\n          document.getElementById('post').appendChild(articleCreate);\n          var deleteValide = '';\n\n          if (response.userId == _this3.user._id || _this3.user.Grade == 'admin') {\n            deleteValide = 'http://localhost:3000/api/post/';\n          } else {\n            deleteValide = 'error';\n          }\n\n          var deletePostLet = document.querySelector(\"#delete__\" + response._id + \"\");\n          deletePostLet.addEventListener(\"click\", function () {\n            if (confirm('Voulez-vous supprimez le post ?')) {\n              axios.delete(\"\".concat(deleteValide) + response._id, {}).then(function () {\n                return location.reload();\n              }).catch(function (error) {\n                return error;\n              });\n            }\n          });\n        } else {\n          var _imageUser = '';\n\n          if (response.imageUrlUser != null) {\n            _imageUser = response.imageUrlUser;\n          } else {\n            _imageUser = '../../assets/test4.jpeg';\n          }\n\n          var _articleCreate = document.createElement('article');\n\n          _articleCreate.className = 'cart__post';\n          _articleCreate.id = 'article__' + response._id + '';\n          _articleCreate.dataset.id = response._id;\n          _articleCreate.innerHTML = \"\\n                <div class=\\\"cart__nav-div\\\">\\n                    <img class=\\\"imgUserGet\\\"  src=\\\"\".concat(_imageUser, \"\\\" alt=\\\"image de profil\\\">\\n                    <h2 class=\\\"namePostGet\\\">\").concat(response.NameUser, \" \").concat(response.FirstNameUser, \"</h2>\\n                    <button class=\\\"modifyPostGet\\\" >\").concat(modifyText, \"</button>\\n                    <button class=\\\"deletePost\\\" id=\\\"delete__\").concat(response._id, \"\\\" >\").concat(deletePost, \"</button>\\n                </div>\\n                <div class=\\\"cart__foot-div\\\">\\n                    <h4 class=\\\"titlePostGet\\\">\").concat(response.Title, \"</h4>\\n                    <p class=\\\"contentPostGet\\\">\").concat(response.Content, \"</p>\\n                </div>\");\n          document.getElementById('post').appendChild(_articleCreate);\n          var _deleteValide = '';\n\n          if (response.userId == _this3.user._id || _this3.user.Grade == 'admin') {\n            _deleteValide = 'http://localhost:3000/api/post/';\n          } else {\n            _deleteValide = 'error';\n          }\n\n          var _deletePostLet = document.querySelector(\"#delete__\" + response._id + \"\");\n\n          _deletePostLet.addEventListener(\"click\", function () {\n            if (confirm('Voulez-vous supprimez le post ?')) {\n              axios.delete(\"\".concat(_deleteValide) + response._id, {}).then(function () {\n                return location.reload();\n              }).catch(function (error) {\n                return error;\n              });\n            }\n          });\n        }\n      });\n    }).catch(function (error) {\n      error;\n    });\n  }\n};","map":{"version":3,"mappings":"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","names":["data","user","url","alt_text","post_id","modifPostData","validPost","methods","modifPost","e","axios","then","postdata","userGrade","headers","document","userDataNew","post","imgInput","img","parent","sendModif","alert","Title","Content","formData","resp","catch","err","fetch","method","body","error","location","onFileChangePost","PostValid","setTimeout","userId","date","hours","imageUrlUser","NameUser","FirstNameUser","mounted","sessionStorage","window","response","modifyText","deletePost","imageUser","articleCreate","deleteValide","deletePostLet"],"sourceRoot":"src/components/forum","sources":["forumUser.vue"],"sourcesContent":["<template>\n<!-- Affiche l'image sélectionner à la création d'un post -->\n  <div class=\"principalForumDiv\">\n    <div class=\"divImgPost\" v-if=\"url\">\n      <label id=\"fontTextImgPost\" class=\"form-label\" for=\"Img-modifUser\"\n        >Image Sélectionner</label\n      >\n      <img class=\"imgPost\" :src=\"url\" />\n    </div>\n    <!-- Affiche l'image sélectionner à la création d'un post -->\n\n    <!-- Affiche l'image de profil de l'user -->\n    <div class=\"borderCreate\">\n      <img\n        class=\"imgProfilCreate\"\n        v-if=\"user.imageUrl\"\n        :src=\"user.imageUrl\"\n        alt=\"\"\n      />\n      <img\n        class=\"imgProfilCreate\"\n        v-if=\"!user.imageUrl\"\n        src=\"../../assets/test4.jpeg\"\n        alt=\"image de profil\"\n      />\n      <!-- Affiche l'image de profil de l'user -->\n\n      <!-- Affiche le text rentrée par l'user lors de la création d'un post -->\n      <div class=\"inputDiv\">\n        <input\n          class=\"inputTitle\"\n          id=\"inputTitle\"\n          enctype=\"text/html\"\n          type=\"text\"\n          placeholder=\"Titre du Post\"\n        />\n        <textarea\n          resize=\"none\"\n          class=\"inputText\"\n          enctype=\"text/html\"\n          id=\"inputText\"\n          placeholder=\"Contenu du post\"\n        ></textarea>\n      </div>\n         <!-- Affiche le text rentrer à la création d'un post -->\n\n         <!-- Input qui gère l'image sélectionner à la création d'un -->\n      <input\n        type=\"file\"\n        encType=\"mutipart/form-data\"\n        accept=\".jpg, .png, .gif\"\n        id=\"imgPostUserInput\"\n        @change=\"onFileChangePost\"\n      />\n       <!-- Input qui gère l'image sélectionner à la création d'un -->\n\n      <!-- Button add img & send le post -->\n      <button id=\"imgPostUser\">Ajoutez une image</button>\n      <button @click=\"PostValid\" id=\"postUser\">Poster</button>\n       <!-- Button add img & send le post -->\n\n    </div>\n\n    <!-- Message de confirmation création d'un post -->\n    <div v-show=\"this.validPost != null\" class=\"mb-3 page2\">\n      <p class=\"validColor\" v-show=\"this.validPost === true\">\n        Création du post en cours..\n      </p>\n    <!-- Message de confirmation création d'un post -->\n    \n     <!-- Message d'erreur création d'un post -->\n      <p class=\"errorColor\" v-show=\"this.validPost === false\">\n        Les champs titre et contenu sont requis !\n      </p>\n      <!-- Message d'erreur création d'un post -->\n\n    </div>\n\n    <!-- Div qui gère les post -->\n    <div id=\"post\" v-on:click=\"function(e){modifPost(e)}\" class=\"mb-5 page2\">\n      <h2 class=\"titlePost\">Fil d'actualité</h2>\n    </div>\n     <!-- Div qui gère les post -->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nlet sessionUser = JSON.parse(sessionStorage.getItem('user'));\n\n\n\nexport default {\n\n    data() {\n        return {\n            user: '',\n            url: null,\n            alt_text: 'test',\n            post_id: '',\n            modifPostData: false,\n            validPost: null,\n        }\n    },\n    methods: {\n        modifPost(e) {\n        axios.get(`http://localhost:3000/api/post/`, {})\n            .then(response => {\n                let postdata = JSON.parse(response.data);\n                if (e.target.className === 'modifyPostGet') {\n                    let dataSetId = e.target.closest('.cart__post').dataset.id;\n                    postdata.forEach((post) => {\n                        if (post._id == dataSetId) {\n                            if (post.imageUrl != \"\") {\n\n                                let userGrade = '';\n                                if (this.user.Grade == 'admin') {\n                                    userGrade = `http://localhost:3000/api/auth/admin/`;\n                                } else {\n                                    userGrade = `http://localhost:3000/api/auth/`;\n                                }\n\n                                axios.get(`${userGrade}` + post.userId, {\n                                        headers: {\n                                            'Authorization': 'Bearer ' + sessionUser.token,\n                                        },\n                                    })\n                                    .then(postdataNew => {\n                                        let userDataNew = postdataNew.data;\n                                        if (post.imageUrl != null) {\n\n                                            document.querySelector('#article__' + post._id + '').innerHTML = ` <div class=\"cart__nav-div\">\n                    <img class=\"imgUserGet\"  src=\"${userDataNew.imageUrl}\" alt=\"image de profil\">\n                    <h2 class=\"namePostGet\">${userDataNew.Name} ${userDataNew.FirstName}</h2>\n                </div>\n\n                <img id=\"img__${post._id}\" class=\"imgPostGet\" src=\"${post.imageUrl}\" alt=\"image du post\">\n\n                <div class=\"cart__foot-div-modif\">\n                    <input type=\"file\" accept=\".jpg, .png, .gif\" id=\"button__${post._id}\" class=\"modifButtonPostTest\">Cliquer ici pour modifier l'image</input>\n                    <button class=\"modifButtonPost\">Cliquer ici pour modifier l'image</button>\n                    <h3  class=\"titlePostGetModif\">Titre du post</h3>\n                    <input id=\"title__${post._id}\" type='text' class=\"inputTextModif\" value=\"${post.Title}\"></input>\n                    <h4 class=\"titlePostGet\">Contenu du post</h4>\n                    <textarea id=\"textarea__${post._id}\" class=\"inputTextAreaModif\">${post.Content}</textarea>\n                </div>\n\n                 <div class=\"cart__com-div-modif\">\n\n                   <a id=\"post__${post._id}\" class=\"commPostGet\" href=\"#\">Confirmer</a>\n                 </div>`\n\n                                        } else {\n\n                                            document.querySelector('#article__' + post._id + '').innerHTML = ` <div class=\"cart__nav-div\">\n                    <img class=\"imgUserGet\"  src=\"${userDataNew.imageUrl}\" alt=\"image de profil\">\n                    <h2 class=\"namePostGet\">${userDataNew.Name} ${userDataNew.FirstName}</h2>\n                </div>\n\n                <div class=\"cart__foot-div-modif\">\n                <input type=\"file\" accept=\".jpg, .png, .gif\" id=\"button__${post._id}\" class=\"modifButtonPostTest\">Cliquer ici pour modifier l'image</input>\n                    <button class=\"modifButtonPost\">Cliquer ici pour ajouter une image</button>\n                    <h3 class=\"titlePostGet\">Titre du post</h3>\n                    <input id=\"title__${post._id}\"  type='text' class=\"inputTextModif\" value=\"${post.Title}\"></input>\n                    <h4 class=\"titlePostGet\">Contenu du post</h4>\n                    <textarea id=\"textarea__${post._id}\" class=\"inputTextAreaModif\">${post.Content}</textarea>\n                </div>\n\n                 <div class=\"cart__com-div-modif\">\n\n                   <a id=\"post__${post._id}\" class=\"commPostGet\" href=\"#\">Confirmer</a>\n                 </div>`\n\n                                        }\n                                        if (post._id == dataSetId) {\n\n                                            var imgInput = document.querySelector(\"#button__\" + post._id + \"\");\n                                            imgInput.addEventListener(\"change\", function(e) {\n                                                if (document.getElementById(\"img__\" + post._id + \"\")) {\n                                                    const file = e.target.files[0];\n                                                    this.url = URL.createObjectURL(file);\n                                                    document.getElementById(\"img__\" + post._id + \"\").src = \"\" + this.url + \"\";\n                                                } else {\n                                                    const file = e.target.files[0];\n                                                    this.url = URL.createObjectURL(file);\n                                                    let img = document.createElement('img');\n                                                    img.className = \"imgPostGet\";\n                                                    img.src = \"\" + this.url + \"\";\n                                                    let parent = document.querySelector('#article__' + post._id + '');\n                                                    let nodeBefore = document.querySelector('.cart__foot-div-modif');\n                                                    parent.insertBefore(img, nodeBefore);\n\n                                                }\n\n                                            });\n\n                                            var sendModif = document.querySelector(\"#post__\" + post._id + \"\");\n                                            sendModif.addEventListener(\"click\", function() {\n                                                if (document.querySelector(\"#title__\" + post._id + \"\").value === \"\" || document.querySelector(\"#textarea__\" + post._id + \"\").value === \"\") {\n                                                    alert('Erreur ! Les champs ne doivent pas être vide !')\n                                                    return false;\n                                                }\n                                                let updatePost = {\n                                                    Title: document.querySelector(\"#title__\" + post._id + \"\").value,\n                                                    Content: document.querySelector(\"#textarea__\" + post._id + \"\").value,\n                                                }\n                                                if (document.getElementById(\"button__\" + post._id + \"\").files[0]) {\n                                                    let image = document.getElementById(\"button__\" + post._id + \"\").files[0]\n                                                    // Création d'un formData obligatoire pour envoi de l'image\n                                                    let formData = new FormData()\n                                                    formData.append('image', image)\n                                                    // Envoi des données sur l'url du serveur (mettez la votre) en POST en envoyant le formData contenant notre image et notre texte\n                                                    axios.put('http://localhost:3000/api/post/postImg/' + post._id, formData, {\n                                                            headers: {\n                                                                'Authorization': 'Bearer ' + sessionUser.token\n                                                            }\n                                                        })\n                                                        .then((resp) => {\n                                                            resp\n                                                        })\n                                                        .catch((err) => {\n                                                            err.response\n                                                        })\n                                                }\n\n                                                fetch('http://localhost:3000/api/post/postText/' + post._id, {\n                                                        method: \"PUT\",\n                                                        headers: {\n                                                            'Accept': 'application/json',\n                                                            'Content-type': 'application/json',\n                                                            'Authorization': 'Bearer ' + sessionUser.token,\n                                                        },\n                                                        body: JSON.stringify(updatePost),\n                                                    })\n                                                    .then(modify => modify)\n                                                    .catch((error) => {\n                                                        error\n                                                    })\n\n\n                                                location.reload();\n                                            });\n                                        }\n                                    })\n\n                            }\n                        }\n\n                    })\n                }\n            })\n    },\n    onFileChangePost(e) {\n        this.modifImg = true;\n        const file = e.target.files[0];\n        this.url = URL.createObjectURL(file);\n    },\n    PostValid() {\n        var d = new Date();\n        var date = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate();\n        var hours = d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\n\n\n        if (document.querySelector('#inputTitle').value === '' || document.querySelector('#inputText').value === '') {\n            this.validPost = false;\n            setTimeout(() => {\n                this.validPost = null;\n            }, 2000)\n            return false;\n        }\n        let updatePost = {\n            Title: document.querySelector('#inputTitle').value,\n            Content: document.querySelector('#inputText').value,\n            userId: sessionUser.userId,\n            date: date,\n            hours: hours,\n            imageUrlUser: this.user.imageUrl,\n            NameUser: this.user.Name,\n            FirstNameUser: this.user.FirstName\n        };\n\n        let image = document.getElementById('imgPostUserInput').files[0];\n        let formData = new FormData()\n        formData.append('image', image)\n\n        axios.post(`http://localhost:3000/api/post/`, formData, {\n                headers: {\n                    'Authorization': 'Bearer ' + sessionUser.token,\n                },\n            })\n            .then((test) => {\n                let test2 = JSON.parse(test.data);\n                fetch(`http://localhost:3000/api/post/` + test2, {\n                        method: \"PUT\",\n                        headers: {\n                            'Accept': 'application/json',\n                            'Content-type': 'application/json',\n                            'Authorization': 'Bearer ' + sessionUser.token,\n                        },\n\n                        body: JSON.stringify(updatePost),\n\n                    })\n                    .then(() => {})\n\n                    .catch((error) => {\n                        error\n                    })\n            })\n\n            .catch((error) => {\n                error\n            })\n        this.validPost = true;\n        setTimeout(() => {\n            this.validPost = null;\n            location.reload();\n        }, 3000)\n\n    }\n\n},\nmounted() {\n    axios.get(`http://localhost:3000/api/auth/` + sessionUser.userId, {\n            headers: {\n                'Authorization': 'Bearer ' + sessionUser.token,\n            },\n        })\n        .then(response => (this.user = response.data))\n        .catch((error) => {\n            error\n            sessionStorage.clear();\n            location.reload();\n            window.location.assign(`http://localhost:8080/`)\n        })\n\n    axios.get(`http://localhost:3000/api/post/`, {\n\n        })\n        .then(response => {\n            let postdata = JSON.parse(response.data);\n\n            postdata.forEach((response) => {\n\n                if (!response.imageUrl) {\n                    response.imageUrl = \"\"\n                }\n                let modifyText = '';\n                let deletePost = '';\n\n                if (response.userId == sessionUser.userId || this.user.Grade == 'admin') {\n                    modifyText = 'Modifier';\n                    deletePost = 'Supprimer'\n                }\n\n                if (response.imageUrl != \"\") {\n                    let imageUser = ''\n                    if (response.imageUrlUser != null) {\n                        imageUser = response.imageUrlUser;\n                    } else {\n                        imageUser = '../../assets/test4.jpeg'\n                    }\n                    let articleCreate = document.createElement('article');\n                    articleCreate.className = 'cart__post';\n                    articleCreate.id = 'article__' + response._id + '';\n                    articleCreate.dataset.id = response._id;\n                    articleCreate.innerHTML = `\n\n                <div class=\"cart__nav-div\">\n                    <img class=\"imgUserGet\"  src=\"${imageUser}\" alt=\"image de profil\">\n                    <h2 class=\"namePostGet\">${response.NameUser} ${response.FirstNameUser}</h2>\n                    <button class=\"modifyPostGet\" href=\"#\">${modifyText}</button>\n                    <button class=\"deletePost\" id=\"delete__${response._id}\" >${deletePost}</button>\n                </div>\n\n                <img class=\"imgPostGet\" src=\"${response.imageUrl}\" alt=\"image du post\">\n\n                <div class=\"cart__foot-div\">\n                    <h4  class=\"titlePostGet\">${response.Title}</h4>\n                    <p class=\"contentPostGet\">${response.Content}</p>\n                </div>`\n                    document.getElementById('post').appendChild(articleCreate);\n                    let deleteValide = '';\n                    if (response.userId == this.user._id || this.user.Grade == 'admin') {\n                        deleteValide = 'http://localhost:3000/api/post/';\n                    } else {\n                        deleteValide = 'error';\n                    }\n                    let deletePostLet = document.querySelector(\"#delete__\" + response._id + \"\");\n                    deletePostLet.addEventListener(\"click\", function() {\n                        if (confirm('Voulez-vous supprimez le post ?')) {\n                            axios.delete(`${deleteValide}` + response._id, {})\n                                .then(() => (location.reload()))\n                                .catch(error => error)\n                        }\n                    });\n\n                } else {\n                    let imageUser = ''\n                    if (response.imageUrlUser != null) {\n                        imageUser = response.imageUrlUser;\n                    } else {\n                        imageUser = '../../assets/test4.jpeg'\n                    }\n                    let articleCreate = document.createElement('article');\n                    articleCreate.className = 'cart__post';\n                    articleCreate.id = 'article__' + response._id + ''\n                    articleCreate.dataset.id = response._id;\n                    articleCreate.innerHTML = `\n                <div class=\"cart__nav-div\">\n                    <img class=\"imgUserGet\"  src=\"${imageUser}\" alt=\"image de profil\">\n                    <h2 class=\"namePostGet\">${response.NameUser} ${response.FirstNameUser}</h2>\n                    <button class=\"modifyPostGet\" >${modifyText}</button>\n                    <button class=\"deletePost\" id=\"delete__${response._id}\" >${deletePost}</button>\n                </div>\n                <div class=\"cart__foot-div\">\n                    <h4 class=\"titlePostGet\">${response.Title}</h4>\n                    <p class=\"contentPostGet\">${response.Content}</p>\n                </div>`\n                    document.getElementById('post').appendChild(articleCreate);\n                    let deleteValide = '';\n                    if (response.userId == this.user._id || this.user.Grade == 'admin') {\n                        deleteValide = 'http://localhost:3000/api/post/';\n                    } else {\n                        deleteValide = 'error';\n                    }\n                    let deletePostLet = document.querySelector(\"#delete__\" + response._id + \"\");\n                    deletePostLet.addEventListener(\"click\", function() {\n                        if (confirm('Voulez-vous supprimez le post ?')) {\n                            axios.delete(`${deleteValide}` + response._id, {})\n                                .then(() => (location.reload()))\n                                .catch(error => error)\n                        }\n\n                    });\n\n\n                }\n            })\n        })\n        .catch((error) => {\n            error\n        })\n}\n}\n</script>\n\n<style>\n.deletePost{color:#000;font-size:1.3rem;right:1%;top:50%;cursor:-webkit-grab;cursor:grab;position:absolute;border:0;background:0 0;font-family:Raleway}.modifButtonPost{padding:2%;width:45%;height:14.8%;color:#fff;background:green;border:0;cursor:-webkit-grab;cursor:grab;border-radius:15px;font-size:1rem;font-family:Raleway,sans-serif;margin-top:2%;position:absolute}.modifButtonPostTest{z-index:1;opacity:0;background:#000;padding:2%;color:#fff;border:0;cursor:-webkit-grab;cursor:grab;border-radius:15px;font-size:1rem;font-family:Raleway,sans-serif;margin-top:2%}.titlePostGetModif{font-size:2rem;font-family:Raleway,sans-serif;color:#000;padding-top:3%}.cart__foot-div-modif{position:relative;background:#fff;display:flex;height:100%;flex-direction:column;align-items:center;background:#fff}.cart__com-div-modif{width:100%;height:60px;background:#fff;border-top:1px solid grey;display:flex;flex-direction:row;align-items:center;justify-content:center}.inputTextModif{font-family:Raleway,sans-serif;font-size:2rem;height:8%;width:70%;margin-bottom:2%;margin-top:2%;margin-left:.5%;resize:none}.inputTextAreaModif{font-family:Raleway,sans-serif;font-size:1.2rem;height:8%;width:70%;margin-bottom:2%;margin-top:2%;margin-left:.5%;resize:none}.modifyPostGet{color:#000;font-size:1.4rem;right:2%;top:10%;cursor:-webkit-grab;cursor:grab;position:absolute;border:0;background:0 0;font-family:Raleway}.affichCommPost{color:#000;font-size:1.2rem;right:2%;cursor:grab;position:absolute}.numberLikePostGet{font-size:1.5rem;margin-left:2%;color:#fff;padding:1%;padding-top:.5%;padding-bottom:.5%;border-radius:50%;background:green}.numberDislikePostGet{font-size:1.5rem;margin-left:2%;color:#fff;padding:1%;padding-top:.5%;padding-bottom:.5%;border-radius:50%;background:red}.div-like{padding-top:3%;display:flex;flex-direction:row;position:relative}.likePostGet{color:#000;margin-left:4%;margin-top:1.3%;font-size:1.3rem;cursor:grab}.fa-solid.fa-heart{font-size:2rem;background:#000}.cart__com-div{width:100%;height:60px;background:#fff;border-top:1px solid grey;display:flex;flex-direction:row;align-items:center}.commPostGet{color:#000;font-size:1.2rem;padding-left:1.5%}.textareaPostGet{width:84%;border:0;height:57px;padding-left:5%;font-size:1.1rem;font-family:Raleway,sans-serif}.contentPostGet{font-size:1.2rem;font-family:Raleway,sans-serif;color:#000;padding-top:2%;padding-left:4%;width:80%;padding-bottom:10%;padding-top:5%}.cart__foot-div{background:#fff;height:100%}.titlePostGet{font-size:2rem;font-family:Raleway,sans-serif;color:#000;padding-top:3%;padding-left:4%}.namePostGet{color:#000;font-size:1.2rem;font-family:Raleway,sans-serif;font-weight:700;margin-left:3%}.imgPostGet{border-radius:0;width:100%;height:400px;object-fit:cover}.imgUserGet{border-radius:50%;width:6%;height:40px;object-fit:cover;margin-left:4%}.cart__post{width:65%;height:100%;border:1px solid #a89999;margin-bottom:5%}.cart__nav-div{display:flex;flex-direction:row;background:#fff;height:80px;align-items:center;position:relative}.mb-5{color:#fff;padding-top:5%;width:75%;padding-bottom:5%;margin-top:3%;border-radius:15px;display:flex;flex-direction:column;align-items:center;background-size:2000%;background-image:url(\"../../assets/background-login.webp\")}.divImgPost{border:1px solid #00000059;width:49.8%;background-image:url(\"../../assets/background-login.webp\");display:flex;flex-direction:column;align-items:center}#fontTextImgPost{font-family:Raleway,sans-serif;font-size:1.5rem;color:#fff;padding-top:5px;text-transform:uppercase}.imgPost{width:90%;height:175px;object-fit:cover;padding-top:10px;border-radius:21px;margin-bottom:30px}#imgPostUser{height:29.5%;width:50%;position:absolute;bottom:0;left:0;border-radius:15px;border:0;background:green;color:#fff;font-family:Raleway,sans-serif;font-size:1.2rem;border-top-left-radius:0;border-top-right-radius:0;border-bottom-right-radius:0;border:1px solid #00000059;cursor:grab}#imgPostUserInput{height:29.5%;width:50%;position:absolute;bottom:0;left:0;border-radius:15px;border:0;background:green;color:#fff;font-family:Raleway,sans-serif;font-size:1.2rem;border-top-left-radius:0;border-top-right-radius:0;border-bottom-right-radius:0;border:1px solid #00000059;cursor:grab;z-index:1;opacity:0}#postUser{height:29.5%;width:50%;position:absolute;bottom:0;right:0;border-radius:15px;border:0;background:green;color:#fff;font-family:Raleway,sans-serif;font-size:1.2rem;border-top-left-radius:0;border-top-right-radius:0;border-bottom-left-radius:0;border:1px solid #00000059;cursor:grab}.borderCreate{margin-top:3%;width:50%;height:170px;background-image:url(\"../../assets/background-login.webp\");border-radius:15px;display:flex;position:relative;flex-direction:row;font-family:Raleway,sans-serif;margin-bottom:2%}.imgProfilCreate{object-fit:cover;height:69.5%;padding-top:.5px;border-radius:0;object-fit:cover;border-top-left-radius:15px;border-right:1px solid #00000059}.inputText{width:100%;height:67%;border:0;border-top:1px solid #00000059;border-right:1px solid #00000059;font-family:Raleway,sans-serif;font-size:1rem;resize:none}.inputTitle{width:100%;height:25%;border:0;border-top:1px solid #00000059;border-right:1px solid #00000059;font-family:Raleway,sans-serif;font-size:1.7rem;border-top-right-radius:15px}.principalForumDiv{width:100%;display:flex;flex-direction:column;align-items:center}.inputDiv{width:82.3%;height:70%}@media screen and (max-width:900px){.fontTextImgPost{font-size:1.2rem!important}.divImgPost{width:90%}}\n</style>\n"]},"metadata":{},"sourceType":"module"}